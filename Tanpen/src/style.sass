@use "sass:math"
@import 'preflight'
@import 'typography'

$fs: 24px
$mplr: 1 + calc(2/3)
$lcct: 32

$lgth: $lcct * 1rem
$lmch: $mplr * 1rem
$lacs: (2 * $mplr - 1) * 1rem
$lsid: ($mplr - 1) * 0.5rem

$titlebar_height: 28px

:root
  --foreground-colour: #414141
  --selection-colour: black
  --ring-colour: #fff
  --theme-colour: #56B8CD

@media screen and (prefers-color-scheme: dark)
  :root
    // --fallback-background-colour: black
    --foreground-colour: #cbcbcc
    --selection-colour: white
    --ring-colour: #fff

html, body
  writing-mode: vertical-rl
  font-size: $fs

body
  background-color: var(--fallback-background-colour)

*
  overscroll-behavior:
    x: contain
    y: none

.normal
  font-feature-settings: 'vchw' 0

.insert
  font-feature-settings: 'vchw'

main
  height: $lgth
  caret-color: var(--theme-colour)

  font-family: Punc, Latin, Hak, sans-serif
  color: var(--foreground-colour)

  line-height: $mplr
  text-align: justify
  margin: calc($lacs - $titlebar_height) $lacs - $lsid $lacs

  display: grid
  grid-template-columns: 1fr

  p:not(:first-child)
    text-indent: 1rem

  .editor, .backdrop
    height: $lgth

  .editor
    grid-area: a
    z-index: 1
  
  .backdrop
    grid-area: a
    color: transparent
    user-select: none
    z-index: 0

mark
  color: transparent
  background-color: var(--theme-colour)
  opacity: 0.6
  // TODO: Animation if able 

mark::before
  content: ""
  position: relative
  

[contenteditable]:focus
  outline: 0 solid transparent

//[contenteditable='false']
//  color: var(--secondary-colour)

// Style text frame
@mixin text_frame($_lcct, $should_set_fs: false)
  @if $should_set_fs
    html, body
      font-size: $fs
  main 
    height: $_lcct * 1rem

@function corresponding_screen_height($text_frame_height)
  // Should return `px`
  @return $text_frame_height + 2 * (2 * $mplr - 1) * $fs - $titlebar_height - .001px

// Create `max-height` breakpoints
$_last_breakpoint: null
@mixin screen_breakpoints($start_lcct, $decrease, $fs)
  $fs: $fs !global
  @for $i from 0 through $decrease
    @if $i == 0
      @if $_last_breakpoint != null
        @media screen and (max-height: corresponding_screen_height($_last_breakpoint))
          @include text_frame($start_lcct - $i, true)
    @else
      @media screen and (max-height: corresponding_screen_height(($start_lcct - $i + 1) * $fs))
        @include text_frame($start_lcct - $i)
      @if $i == $decrease
        $_last_breakpoint: ($start_lcct - $i) * $fs !global

@mixin lgth_step_down($ideal_lcct, $min_lcct, $sizes...)
  $sizes: append($sizes, 0px)
  @for $i from 1 to length($sizes)
    $greedy_step: math.floor(math.div((nth($sizes, $i) - nth($sizes, $i + 1)) * $ideal_lcct, nth($sizes, $i)))
    $step: min($greedy_step, $ideal_lcct - $min_lcct)
    @include screen_breakpoints($ideal_lcct, $step, nth($sizes, $i))


@include lgth_step_down($lcct, 16, $fs, 21px, 18px, 16px)
